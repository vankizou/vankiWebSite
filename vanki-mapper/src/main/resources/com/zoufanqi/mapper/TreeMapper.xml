<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zoufanqi.mapper.TreeMapper" >
  <resultMap id="BaseResultMap" type="com.zoufanqi.entity.Tree" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="PARENT_ID" property="parentId" jdbcType="BIGINT" />
    <result column="USER_ID" property="userId" jdbcType="BIGINT" />
    <result column="TYPE" property="type" jdbcType="INTEGER" />
    <result column="TARGET_ID" property="targetId" jdbcType="BIGINT" />
    <result column="TITLE" property="title" jdbcType="VARCHAR" />
    <result column="IS_PUBLIC" property="isPublic" jdbcType="INTEGER" />
    <result column="COUNT_TARGET" property="countTarget" jdbcType="INTEGER" />
    <result column="IS_OPEN" property="isOpen" jdbcType="INTEGER" />
    <result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
    <result column="CREATE_DATETIME" property="createDatetime" jdbcType="TIMESTAMP" />
    <result column="IS_DEL" property="isDel" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, PARENT_ID, USER_ID, TYPE, TARGET_ID, TITLE, IS_PUBLIC, COUNT_TARGET, IS_OPEN, 
    DESCRIPTION, CREATE_DATETIME, IS_DEL
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zoufanqi.entity.TreeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_tree
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="offset != null and rows != null" >
      limit #{offset},#{rows}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_tree
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_tree
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.zoufanqi.entity.TreeExample" >
    delete from t_tree
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zoufanqi.entity.Tree" >
    insert into t_tree (ID, PARENT_ID, USER_ID, 
      TYPE, TARGET_ID, TITLE, 
      IS_PUBLIC, COUNT_TARGET, IS_OPEN, 
      DESCRIPTION, CREATE_DATETIME, IS_DEL
      )
    values (#{id,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{type,jdbcType=INTEGER}, #{targetId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, 
      #{isPublic,jdbcType=INTEGER}, #{countTarget,jdbcType=INTEGER}, #{isOpen,jdbcType=INTEGER}, 
      #{description,jdbcType=VARCHAR}, #{createDatetime,jdbcType=TIMESTAMP}, #{isDel,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zoufanqi.entity.Tree" >
    insert into t_tree
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="parentId != null" >
        PARENT_ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="type != null" >
        TYPE,
      </if>
      <if test="targetId != null" >
        TARGET_ID,
      </if>
      <if test="title != null" >
        TITLE,
      </if>
      <if test="isPublic != null" >
        IS_PUBLIC,
      </if>
      <if test="countTarget != null" >
        COUNT_TARGET,
      </if>
      <if test="isOpen != null" >
        IS_OPEN,
      </if>
      <if test="description != null" >
        DESCRIPTION,
      </if>
      <if test="createDatetime != null" >
        CREATE_DATETIME,
      </if>
      <if test="isDel != null" >
        IS_DEL,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="targetId != null" >
        #{targetId,jdbcType=BIGINT},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="isPublic != null" >
        #{isPublic,jdbcType=INTEGER},
      </if>
      <if test="countTarget != null" >
        #{countTarget,jdbcType=INTEGER},
      </if>
      <if test="isOpen != null" >
        #{isOpen,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createDatetime != null" >
        #{createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zoufanqi.entity.TreeExample" resultType="java.lang.Integer" >
    select count(*) from t_tree
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_tree
    <set >
      <if test="record.parentId != null" >
        PARENT_ID = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.type != null" >
        TYPE = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.targetId != null" >
        TARGET_ID = #{record.targetId,jdbcType=BIGINT},
      </if>
      <if test="record.title != null" >
        TITLE = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.isPublic != null" >
        IS_PUBLIC = #{record.isPublic,jdbcType=INTEGER},
      </if>
      <if test="record.countTarget != null" >
        COUNT_TARGET = #{record.countTarget,jdbcType=INTEGER},
      </if>
      <if test="record.isOpen != null" >
        IS_OPEN = #{record.isOpen,jdbcType=INTEGER},
      </if>
      <if test="record.description != null" >
        DESCRIPTION = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.createDatetime != null" >
        CREATE_DATETIME = #{record.createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDel != null" >
        IS_DEL = #{record.isDel,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_tree
    set ID = #{record.id,jdbcType=BIGINT},
      PARENT_ID = #{record.parentId,jdbcType=BIGINT},
      USER_ID = #{record.userId,jdbcType=BIGINT},
      TYPE = #{record.type,jdbcType=INTEGER},
      TARGET_ID = #{record.targetId,jdbcType=BIGINT},
      TITLE = #{record.title,jdbcType=VARCHAR},
      IS_PUBLIC = #{record.isPublic,jdbcType=INTEGER},
      COUNT_TARGET = #{record.countTarget,jdbcType=INTEGER},
      IS_OPEN = #{record.isOpen,jdbcType=INTEGER},
      DESCRIPTION = #{record.description,jdbcType=VARCHAR},
      CREATE_DATETIME = #{record.createDatetime,jdbcType=TIMESTAMP},
      IS_DEL = #{record.isDel,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zoufanqi.entity.Tree" >
    update t_tree
    <set >
      <if test="parentId != null" >
        PARENT_ID = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        TYPE = #{type,jdbcType=INTEGER},
      </if>
      <if test="targetId != null" >
        TARGET_ID = #{targetId,jdbcType=BIGINT},
      </if>
      <if test="title != null" >
        TITLE = #{title,jdbcType=VARCHAR},
      </if>
      <if test="isPublic != null" >
        IS_PUBLIC = #{isPublic,jdbcType=INTEGER},
      </if>
      <if test="countTarget != null" >
        COUNT_TARGET = #{countTarget,jdbcType=INTEGER},
      </if>
      <if test="isOpen != null" >
        IS_OPEN = #{isOpen,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        DESCRIPTION = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createDatetime != null" >
        CREATE_DATETIME = #{createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null" >
        IS_DEL = #{isDel,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zoufanqi.entity.Tree" >
    update t_tree
    set PARENT_ID = #{parentId,jdbcType=BIGINT},
      USER_ID = #{userId,jdbcType=BIGINT},
      TYPE = #{type,jdbcType=INTEGER},
      TARGET_ID = #{targetId,jdbcType=BIGINT},
      TITLE = #{title,jdbcType=VARCHAR},
      IS_PUBLIC = #{isPublic,jdbcType=INTEGER},
      COUNT_TARGET = #{countTarget,jdbcType=INTEGER},
      IS_OPEN = #{isOpen,jdbcType=INTEGER},
      DESCRIPTION = #{description,jdbcType=VARCHAR},
      CREATE_DATETIME = #{createDatetime,jdbcType=TIMESTAMP},
      IS_DEL = #{isDel,jdbcType=INTEGER}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>