<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zoufanqi.mapper.NoteDetailMapper" >
  <resultMap id="BaseResultMap" type="com.zoufanqi.entity.NoteDetail" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="USER_ID" property="userId" jdbcType="BIGINT" />
    <result column="NOTE_ID" property="noteId" jdbcType="BIGINT" />
    <result column="TYPE" property="type" jdbcType="INTEGER" />
    <result column="SEQUENCE" property="sequence" jdbcType="INTEGER" />
    <result column="CREATE_DATETIME" property="createDatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.zoufanqi.entity.NoteDetail" extends="BaseResultMap" >
    <result column="CONTENT" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, USER_ID, NOTE_ID, TYPE, SEQUENCE, CREATE_DATETIME
  </sql>
  <sql id="Blob_Column_List" >
    CONTENT
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.zoufanqi.entity.NoteDetailExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_note_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="offset != null and rows != null" >
      limit #{offset},#{rows}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zoufanqi.entity.NoteDetailExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_note_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="offset != null and rows != null" >
      limit #{offset},#{rows}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_note_detail
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_note_detail
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.zoufanqi.entity.NoteDetailExample" >
    delete from t_note_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zoufanqi.entity.NoteDetail" >
    insert into t_note_detail (ID, USER_ID, NOTE_ID, 
      TYPE, SEQUENCE, CREATE_DATETIME, 
      CONTENT)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{noteId,jdbcType=BIGINT}, 
      #{type,jdbcType=INTEGER}, #{sequence,jdbcType=INTEGER}, #{createDatetime,jdbcType=TIMESTAMP}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zoufanqi.entity.NoteDetail" >
    insert into t_note_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="noteId != null" >
        NOTE_ID,
      </if>
      <if test="type != null" >
        TYPE,
      </if>
      <if test="sequence != null" >
        SEQUENCE,
      </if>
      <if test="createDatetime != null" >
        CREATE_DATETIME,
      </if>
      <if test="content != null" >
        CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="noteId != null" >
        #{noteId,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="sequence != null" >
        #{sequence,jdbcType=INTEGER},
      </if>
      <if test="createDatetime != null" >
        #{createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zoufanqi.entity.NoteDetailExample" resultType="java.lang.Integer" >
    select count(*) from t_note_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_note_detail
    <set >
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.noteId != null" >
        NOTE_ID = #{record.noteId,jdbcType=BIGINT},
      </if>
      <if test="record.type != null" >
        TYPE = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.sequence != null" >
        SEQUENCE = #{record.sequence,jdbcType=INTEGER},
      </if>
      <if test="record.createDatetime != null" >
        CREATE_DATETIME = #{record.createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null" >
        CONTENT = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update t_note_detail
    set ID = #{record.id,jdbcType=BIGINT},
      USER_ID = #{record.userId,jdbcType=BIGINT},
      NOTE_ID = #{record.noteId,jdbcType=BIGINT},
      TYPE = #{record.type,jdbcType=INTEGER},
      SEQUENCE = #{record.sequence,jdbcType=INTEGER},
      CREATE_DATETIME = #{record.createDatetime,jdbcType=TIMESTAMP},
      CONTENT = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_note_detail
    set ID = #{record.id,jdbcType=BIGINT},
      USER_ID = #{record.userId,jdbcType=BIGINT},
      NOTE_ID = #{record.noteId,jdbcType=BIGINT},
      TYPE = #{record.type,jdbcType=INTEGER},
      SEQUENCE = #{record.sequence,jdbcType=INTEGER},
      CREATE_DATETIME = #{record.createDatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zoufanqi.entity.NoteDetail" >
    update t_note_detail
    <set >
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=BIGINT},
      </if>
      <if test="noteId != null" >
        NOTE_ID = #{noteId,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        TYPE = #{type,jdbcType=INTEGER},
      </if>
      <if test="sequence != null" >
        SEQUENCE = #{sequence,jdbcType=INTEGER},
      </if>
      <if test="createDatetime != null" >
        CREATE_DATETIME = #{createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        CONTENT = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zoufanqi.entity.NoteDetail" >
    update t_note_detail
    set USER_ID = #{userId,jdbcType=BIGINT},
      NOTE_ID = #{noteId,jdbcType=BIGINT},
      TYPE = #{type,jdbcType=INTEGER},
      SEQUENCE = #{sequence,jdbcType=INTEGER},
      CREATE_DATETIME = #{createDatetime,jdbcType=TIMESTAMP},
      CONTENT = #{content,jdbcType=LONGVARCHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zoufanqi.entity.NoteDetail" >
    update t_note_detail
    set USER_ID = #{userId,jdbcType=BIGINT},
      NOTE_ID = #{noteId,jdbcType=BIGINT},
      TYPE = #{type,jdbcType=INTEGER},
      SEQUENCE = #{sequence,jdbcType=INTEGER},
      CREATE_DATETIME = #{createDatetime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>